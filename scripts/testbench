#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys
import os
import testbench


def colored():
    try:
        import clint
    except ImportError:
        raise ImportError("You need to have clint installed for testbench-color.")
    from testbench.colored import ColorBenchmarkRunner
    return ColorBenchmarkRunner


# a mapping from the names this script can be called as to a callable that
# returns a BenchmarkRunner constructor.
runners = {
    "testbench-color": colored,
    "testbench": lambda: testbench.BenchmarkRunner,
}


def main():
    "Run the benchmarks in a given module."
    # get the name that this thing was called as
    called_as = os.path.basename(sys.argv[0])

    # make sure we have an argument
    if not len(sys.argv) == 2:
        raise NameError("You need to give a module to run benchmarks from.")
    
    # add the current working directory to sys.path and import it
    sys.path.append(os.getcwd())
    module = __import__(sys.argv[1])

    # get our benchmark runner based on how this script was called
    runner = runners[called_as]()(module)

    # and then run the benchmark and print the results
    runner.run()


main()
